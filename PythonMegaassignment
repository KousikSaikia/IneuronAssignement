Q1 - Q25 : https://github.com/KousikSaikia/IneuronAssignement/blob/main/PythonAssignment-1.md

Q26. What is a string? How can we declare string in Python?

String is a data type. we can use str to declare a string in python.

Q27. How can we access the string using its index?

We can access the characters in a string by referring to its index number inside square brackets [] 

Q28. Write a code to get the desired output of the following

string = "Big Data iNeuron"

print(string.split()[-1])

desired_output = "iNeuron"
Q29. Write a code to get the desired output of the following

string = "Big Data iNeuron"
desired_output = "norueNi"

Q30. Resverse the string given in the above question.

string[::-1]

Q31. How can you delete entire string at once?

del or assign an empty string

Q32. What is escape sequence?

 Escape sequences are typically used to specify actions such as carriage returns and tab movements on terminals and printers.

Q33. How can you print the below string?

'iNeuron's Big Data Course'

using print function

Q34. What is a list in Python?

Lists are used to store multiple items in a single variable. Lists are one of 4 built-in data types in Python used to store collections of data

Q35. How can you create a list in Python?

By defining the data using comma separated form inside square barcket.

Q36. How can we access the elements in a list?

using index of the list items.

Q37. Write a code to access the word "iNeuron" from the given list.

lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]

lst[4][2]

Q38. Take a list as an input from the user and find the length of the list.

list1 = input("Enter the values of list using space: "))
print(len(list1.split())


Q39. Add the word "Big" in the 3rd index of the given list.

lst = ["Welcome", "to", "Data", "course"]
lst.insert(3, "Big")

Q40. What is a tuple? How is it different from list?

Tuple is one of the data type in python that can store multiple values in a single variable. Major difference with list is tuples are immutable and list can be modifies.

Q41. How can you create a tuple in Python?

tup = (1,2) - please the elements between brackets

Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.

Tuples are immutable and hence cannot modified to append an item

Q43. Can two tuple be appended. If yes, write a code for it. If not, why?

tuples are immutable and hence cannot be appned.

Q44. Take a tuple as an input and print the count of elements in it.

lst = ("Welcome", "to", "Data", "course")
print(len(lst))

Q45. What are sets in Python?

Sets are used to store multiple items in a single variable. Set is one of 4 built-in data types in Python used to store collections of data

Q46. How can you create a set?

set1 ={} , by placing the values between the curly braces.

Q47. Create a set and add "iNeuron" in your set.

set1 = {'iNeuron'}

set1 = set()
set1.add("iNeuron")
print(set1)

Q48. Try to add multiple values using add() function.

set1 = set()
set1.add("iNeuron")
set1.add("Big")
set1.add("data")
set1.add("camp")
print(set1)

Q49. How is update() different from add()?

We use add() method to add single value to a set. We use update() method to add sequence values to a set

Q50. What is clear() in sets?

clear will delete all the elements in a set.

Q51. What is frozen set?

Python frozenset() Method creates an immutable Set object from an iterable. It is a built-in Python function.
As it is a set object therefore we cannot have duplicate values in the frozenset

Q52. How is frozen set different from set?

fronzen sets are immutable. It accepts only itterable object.

Q53. What is union() in sets? Explain via code.

Union gives the all elements from both sets (no duplicate value)

set1 = {1,2,3,4,5,6}
set2={4,5,6,7,8,9}
print(set1 | set2)

Q54. What is intersection() in sets? Explain via code.

intersection gives only the common elements from both the sets

set1 = {1,2,3,4,5,6}
set2={4,5,6,7,8,9}
print(set1 & set2)

Q55. What is dictionary in Python?

Dictionaries are used to store data values in key:value pairs. A dictionary is a collection which is ordered*, changeable and do not allow duplicates.

Q56. How is dictionary different from all other data structures.

It stores data values in key:value format.

Q57. How can we delare a dictionary in Python?

using curly brackets {}.

Q58. What will the output of the following?

var = {}
print(type(var))
output - <class 'dict'>
Q59. How can we add an element in a dictionary?

dic1={}
dic1['name'] = 'Kousik'

Q60. Create a dictionary and access all the values in that dictionary.

var1 ={'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
print(var1.values())

Q61. Create a nested dictionary and access all the element in the inner dictionary.

var1 ={'Sachin': 10, 'captain':{'MSD': 7, 'Kohli': 18} , 'Rohit': 45}
print(var1['captain'].values())


Q62. What is the use of get() function?

he get () method returns the value of the item with the specified key.

Q63. What is the use of items() function?

items() method is used to return the list with all dictionary keys with values. 

Q64. What is the use of pop() function?

It removes the element of the key for with pop is configured.

Q65. What is the use of popitems() function?

he popitem() method removes the item that was last inserted into the dictionary. 

Q66. What is the use of keys() function?

Give the list of all they keys in the dictionary.

Q67. What is the use of values() function?

Gives the list of all the values in the dictionary.

Q68. What are loops in Python?

Looping in pythin means repeating something over and over until a particular condition is satisfied.

Q69. How many type of loop are there in Python?

for loop and while loop

Q70. What is the difference between for and while loops?

A for loop is a single-line command that will be executed repeatedly. While loops can be single-lined or contain multiple commands for a single condition.

Q71. What is the use of continue statement?

A continue statement ends the current iteration of a loop.

Q72. What is the use of break statement?

Break is used to terminate a loop and move to the next condition.

Q73. What is the use of pass statement?

The pass statement is used as a placeholder for future code. 
When the pass statement is executed, nothing happens, but you avoid getting an error when empty code is not allowed.

Q74. What is the use of range() function?

The range() function returns a sequence of numbers, starting from 0 by default, and increments by 1

Q75. How can you loop over a dictionary?

Using for and keys in a dictionary.

Coding problems
Q76. Write a Python program to find the factorial of a given number.

x = 5 
result = 1
for x in range(1,x+1):
    result = result * x
print(result)


Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (PRT)/100

def simpleInterest(p,r,t):
    SI = (p*r*t)/100
    print(SI)

princial = float(input("Enter the principal amount : "))
roi = float(input("Enter the rate of interest : "))
time = float(input("Enter the number of years : "))

simpleInterest(princial, roi, time)

Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.

def CompundInterest(p,r,t):
    CI = p*((1+r/100)**t)
    print(CI)

princial = float(input("Enter the principal amount : "))
roi = float(input("Enter the rate of interest : "))
time = float(input("Enter the number of years : "))

CompundInterest(princial, roi, time)

Q79. Write a Python program to check if a number is prime or not.

number = int(input("Enter a whole number greater than one: "))
flag = False
for x in range(2,number):
    print(x)
    if number%x==0:
        flag = True
        break
if flag ==True:
    print('No is not a prime number')
else:
    print('No is a prime number') 

Q80. Write a Python program to check Armstrong Number.

number = input("Enter a whole number greater than one: ")
#str_num=str(number)
lst_num = list(number)

import functools

sum = functools.reduce(lambda x,y:x+y, list(map(lambda x: int(x)**3, lst_num)), 0)

if sum==int(number):
    print('this is armstrong number')
else:
    print('This is not a armstrong number')

Q81. Write a Python program to find the n-th Fibonacci Number.

def Fibonacci(n): 
    if n<0: 
        print("Incorrect input") 
    elif n==0: 
        return (0) 
    
    elif n==1: 
        return (1)
    else:
        return (Fibonacci(n-1)+Fibonacci(n-2)) 
print(Fibonacci(3)) 


Q82. Write a Python program to interchange the first and last element in a list.

list1= [1,2,3,4]
num=list1[-1]
list1[-1]=list1[0]
list1[0]=num
print(list1)

Q83. Write a Python program to swap two elements in a list.

list1= [81,31,3,45,86,21,33,25]
val1 = 33
val2 = 45
idx1 = list1.index(val1)
idx2 = list1.index(val2)

list1[idx1] = val2
list1[idx2] = val1

print(list1)

Q84. Write a Python program to find N largest element from a list.

list1= [81,25,3,45,86,21,33,25]
N = 4
list1.sort(reverse=False)
for x in range(1,N+1):
    print(list1[-x])


Q85. Write a Python program to find cumulative sum of a list.

import functools
print(functools.reduce(lambda x,y:x+y, list1, 0))

Q86. Write a Python program to check if a string is palindrome or not.

str1 = 'malayalam'
list1 = list(str1)
print(list1)
print(list1[::-1])
if list1 == list1[::-1]:
    print('This a pallindrome')
else:
    print('Not a pallindrome')

Q87. Write a Python program to remove i'th element from a string.

str1='hello world'
n = 3
str1=str1.replace(str1[n], '')
print(str1)


Q88. Write a Python program to check if a substring is present in a given string.

str1 = 'this is my play ground and I play cricket here everyday'
substr = 'ket'
if str1.find(substr)!=-1:
    print('Substring is present')
else:
    print('Substring is absent')

Q89. Write a Python program to find words which are greater than given length k.

str1 = 'this is my play ground and I play cricket here everyday'
n = 4
lst1=str1.split()
print(list(x for x in lst1 if len(x)>4))

Q90. Write a Python program to extract unquire dictionary values.

dict1 ={'name': 'kousik', 'age': 35, 'city': 'Hyderabad', 'exp': 12,'logic':'kousik'}
print(set(dict1.values()))

Q91. Write a Python program to merge two dictionary.

dict1 = {'name':'kousik','age':35}
dict2 = {'city':'Hyderabad','exp':12}

dict1.update(dict2)
print(dict1)

Q92. Write a Python program to convert a list of tuples into dictionary.

Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}

lst1 = [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
dict3 = {}
for x,y in lst1 :
    dict3[x]=y

print(dict3)

Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.

Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]

list1 = [9,5,6]

lambda_cube = lambda x:x*x*x
lst1 =[]
for x in list1:
    tup= (x,lambda_cube(x))
    lst1.append(tup)
print(lst1)


Q94. Write a Python program to get all combinations of 2 tuples.

Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]

test_tuple1 = (7, 2)
test_tuple2 = (7, 8)

result1 = [(x,y) for x in test_tuple1 for y in test_tuple2]
result2 = [(x,y) for x in test_tuple2 for y in test_tuple1]
print(result1+result2)

Q95. Write a Python program to sort a list of tuples by second item.

Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]

list1= [('for', 24), ('Geeks', 8), ('Geeks', 30)] 

reslt = []
print(type(reslt))
for x,y in list1:
    print(y)
   # reslt.sort()
reslt.sort()


list1.sort(reverse=False,key=lambda x: x[1])
print(list1)

Q96. Write a python program to print below pattern.

* 
* * 
* * * 
* * * * 
* * * * * 

for x in range(1,6):
    print('* '*x)
    
Q97. Write a python program to print below pattern.

    *
   **
  ***
 ****
*****

for y in range(1,6):
    print(((5-y)*' ')+'*'*y)
    
 
Q98. Write a python program to print below pattern.

    * 
   * * 
  * * * 
 * * * * 
* * * * * 

x = 5
for i in range(x):
    for j in range(x):
        print(end=" ")
    x = x - 1
    for j in range(i + 1):
        print("* ", end=' ')
    print(" ")

Q99. Write a python program to print below pattern.

1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5

for x in range(1,6):
    for y in range(1,x+1):
        print(y, end=" ")
    print(" ")


Q100. Write a python program to print below pattern.

A 
B B 
C C C 
D D D D 
E E E E E 


list1 = ['A','B','C','D','E']

for x in range(len(list1)):
    for y in range(x+1):
        print(list1[x],end=' ')
    print('')
